import e from"mitt";import{provide as n,onMounted as t}from"vue";import{withBase as r}from"@vuepress/client";const o=Symbol.for("PWAEvent"),i=()=>{if(__VUEPRESS_SSR__)return;const i=e();n(o,i),t((async()=>{if(__VUEPRESS_DEV__)return;let e=!1;navigator.serviceWorker.controller&&navigator.serviceWorker.addEventListener("controllerchange",(()=>{e||(e=!0,window.location.reload())})),SW_FORCE_UPDATE&&(e=>{e.on("updatefound",(()=>{navigator.serviceWorker.getRegistration().then((e=>{e&&e.active&&window.location.reload(!0)}))}))})(i),await(async e=>{const{register:n}=await Promise.resolve().then((function(){return u}));n(r(SW_PATH),{ready(n){console.log("[PWA]: Service worker is active"),e.emit("ready",n)},registered(n){console.log("[PWA]: Service worker has been registered."),e.emit("registered",n)},cached(n){console.log("[PWA]: Content has been cached for offline usage"),e.emit("cached",n)},updatefound(n){console.log("[PWA]: New content is downloading."),e.emit("updatefound",n)},updated(n){console.log("[PWA]: New content is available, please refresh.");const t="service-worker-version",r=Number(localStorage.getItem(t)||0);localStorage.setItem(t,(r+1).toString()),localStorage.removeItem("manifest"),e.emit("updated",n)},offline(){console.log("[PWA]: No internet connection found. App is running in offline mode."),e.emit("offline")},error(n){console.log("[PWA]: Error during service worker registration:",n),e.emit("error",n)}})})(i)}))};var a;function c(e,n){navigator.onLine||e("offline"),e("error",n)}function s(e,n,t){navigator.serviceWorker.register(e,t).then((function(e){n("registered",e),e.waiting?n("updated",e):e.onupdatefound=function(){n("updatefound",e);var t=e.installing;t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?n("updated",e):n("cached",e))}}})).catch((function(e){return c(n,e)}))}function d(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){return c(emit,e)}))}"undefined"!=typeof window&&(a="undefined"!=typeof Promise?new Promise((function(e){return window.addEventListener("load",e)})):{then:function(e){return window.addEventListener("load",e)}});var u=Object.freeze({__proto__:null,register:function(e,n){void 0===n&&(n={});var t=n.registrationOptions;void 0===t&&(t={}),delete n.registrationOptions;var r=function(e){for(var t=[],r=arguments.length-1;r-- >0;)t[r]=arguments[r+1];n&&n[e]&&n[e].apply(n,t)};"serviceWorker"in navigator&&a.then((function(){Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))?(!function(e,n,t){fetch(e).then((function(r){404===r.status?(n("error",new Error("Service worker not found at "+e)),d()):-1===r.headers.get("content-type").indexOf("javascript")?(n("error",new Error("Expected "+e+" to have javascript content-type, but received "+r.headers.get("content-type"))),d()):s(e,n,t)})).catch((function(e){return c(n,e)}))}(e,r,t),navigator.serviceWorker.ready.then((function(e){r("ready",e)})).catch((function(e){return c(r,e)}))):(s(e,r,t),navigator.serviceWorker.ready.then((function(e){r("ready",e)})).catch((function(e){return c(r,e)})))}))},unregister:d});export{i as setupPWA};
//# sourceMappingURL=setup.js.map
